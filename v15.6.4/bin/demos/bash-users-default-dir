$usepop/bin/demos/default-dir-for-bash
Aaron Sloman
http://www.cs.bham.ac.uk/~axs/
18 Jan 2005

RUNNING POPLOG IN THE DEFAULT LOCATION,
FOR BASH and KSH USERS

If Poplog is in /usr/local/poplog, and if the installation script
successfully installed a symbolic link from

    /usr/local/bin/poplog
to
    /usr/local/poplog/current-poplog/bin/poplog.sh

Then, you should be able to run poplog commands by prefixing them with
'poplog'.

E.g.

    poplog pop11

        Will start up pop11

    poplog xved myfile.p

        Will start up XVed (the multi-window version of the poplog
        editor Ved) and will read your file called myfile.p, if it
        exists, or will start a new file with that name.

However, if you wish to be able to run pop11, ved, xved, etc. without
having to type 'poplog' before each command, you can do this, which does
not require a link in /usr/local/bin/

    Give this 'dot' command to set the environment variables:

        . /usr/local/poplog/current-poplog/bin/poplog.sh

    That will print out something like

        Sussex Poplog Version <version number>

    and you will then be able to run pop11, xved, clisp, prolog, etc.
    without the poplog prefix until you exit from that shell.

    Every time you start a new xterm window or log out and log in you'll
    have to repeat the above 'dot' command.

    You can avoid the need to repeat it by putting this in your .bashrc
    file:
        . /usr/local/poplog/current-poplog/bin/poplog.sh

    Then after logging in or starting a new xterm window running a login
    shell you will be able run pop11, Xved, clisp, prolog, etc.,
    directly. E.g. to start up xved on your pop11 file called myfile.p

        xved myfile.p


For more information see
    http://www.cs.bham.ac.uk/research/poplog/userguide.html

which should have been installed in poplog as

    $usepop/man/man1/userguide.html
