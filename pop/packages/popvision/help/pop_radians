HELP POP_RADIANS                                David Young
                                                April 2000

LIB * POP_RADIANS defines some angular quantities that are set according
to the value of *popradians.

When writing general code that uses angular quantities, one often ends
up with things like

    if popradians then pi/2 else 90 endif -> rightangle

This is inefficient, fiddly and error-prone. It is normally more
efficient to define, say, a right angle at the time popradians is set,
rather than when the angle is required. By loading LIB POP_RADIANS and
using pop_radians instead of popradians, this is done automatically.

pop_radians -> bool                                    [active variable]
bool -> pop_radians
        Referencing this variable returns the current value of
        *popradians. Updating this variable updates popradians and also
        sets the values of the variables listed below.

pop_circle                                                    [variable]
pop_semicircle                                                [variable]
pop_rightangle                                                [variable]
pop_degree                                                    [variable]
pop_radian                                                    [variable]
pop_arcminute                                                 [variable]
pop_arcsecond                                                 [variable]
        These variables are set when the library is loaded according to
        the current value of popradians, and are updated whenever
        pop_radians is updated. They should not be changed in any other
        way. Their values are as given in the table below.


    Variable        pop_radians = false     pop_radians = true
    --------        -------------------     ------------------
    pop_circle      360.0                   2 * pi = 6.2832...
    pop_semicircle  180.0                   pi = 3.1416...
    pop_rightangle  90.0                    pi/2 = 1.5708...
    pop_degree      1.0                     2*pi/360 = 0.01745...
    pop_radian      360/(2*pi) = 57.30...   1.0
    pop_arcminute   1.0/60 = 0.01667...     2*pi/21600 = 0.000291...
    pop_arcsecond   1.0/3600 = 0.000278...  2*pi/1296000 = 0.00000485...


--- $popvision/help/pop_radians
--- Copyright University of Sussex 2000. All rights reserved.
