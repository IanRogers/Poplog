REF XWindowManager                              A. Schoter, August 1991

        COPYRIGHT University of Sussex 1991. All Rights Reserved.

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<                             >>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<       X WINDOW MANAGER      >>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<                             >>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

The structures and procedures in this REF file implement the  equivalent
C structures  and  functions for communicating with the window manager.




---------------------
1  List of procedures
---------------------

The procedures below are made available by doing:

         uses xlib;
         uses XWindowManager;

For details see:

                     Xlib - C Language X Interface,
                       MIT X Consortium Standard,
                         X Version 11, Release 4

        Copyright (C) 1985, 1986, 1987, 1988, 1989 Massachusetts
        Institute of Technology,  Cambridge, Massachusetts,  and
        Digital Equipment Corporation, Maynard, Massachusetts.


XClassHint                                                     [typedef]
        This data structure is used by the procedures XGetClassHint  and
        XSetClassHint described bleow.

            typedef struct {
                char * res_name;
                char * res_class;
            } XClassHint;


XWMHints                                                       [typedef]
        This data structure  is used by  the procedures XSetWMHints  and
        XGetWMHints described below.

            typedef struct {
                long flags;
                Bool input;
                int initial_state;
                Pixmap icon_pixmap;
                Window icon_window;
                int icon_x, icon_y;
                Pixmap icon_mask;
                XID window_group;
            } XWMHints;

        flags marks which  fields in  the structure  are defined;  input
        specifies whether the application  relies on the window  manager
        to get keyboard  input; icon_pixmap specifies  the pixmap to  be
        used as the icon; icon_window specifies the window to be used as
        the icon; icon_x and icon_y specify the initial position of  the
        icon;  icon_mask  speifies  the   bitmap  mask  for  the   icon;
        window_group specifies the ID of the related window group.


XIconSize                                                      [typedef]
        This data structure is used  by the procedures XGetIconSize  and
        XSetIconSize described below.

            typedef struct {
                int min_width, min_height;
                int max_width, max_height;
                int width_inc, height_inc;
            } XIconSize;


XFetchName(DspPtr,xid,charptrptr) -> int                     [procedure]
        Returns the name of the  window specified by xid in  charptrptr.
        int is the Status of the call: 0 for failure, 1 for success.


XStoreName(DspPtr,xid,string)                                [procedure]
        Assigns a name specified  by string to  the window specified  by
        xid. This  name  will be  returned  by any  subsequent  call  to
        XFetchName. Windows are typically  named for the convenience  of
        window managers. This allows a window manager to display a  text
        representation of a window when its icon is being displayed.


XGetSizeHints(DspPtr,xid,xsizehintsptr,ulong) -> int         [procedure]
        XGetResizeHint asks for the XSizeHints parameters for the window
        specified by  xid and  returns them.  int is  1 if  the call  is
        successful and 0 otherwise.


XSetSizeHints(DspPtr,xid,xsizehintsptr,ulong)                [procedure]
        XSetSizeHint is used to  give a hint to  the window system  that
        can be used by  a window manager program  to define the  desired
        shape of a window (specified by  xid). The inside height of  the
        window should  be the  base  height plus  some multiple  of  the
        height increment as long as this falls within the bounds set  by
        the minumum and maximum height. Similarly for the inside  width.
        These parameters  are passed  in the  structure XSizeHints  (see
        REF * XSizeHints). These  parameters are  hints for  the  window
        manager, but there is no  guarantee that they will be  honoured.
        The base height and width  must be non-negative, and the  height
        and width increments must  be positive. This  is used by  window
        managers to  avoid resizing  windows to  sizes that  may not  be
        convenient for the  clients, but clients  must not presume  that
        the window is the correct size.


XGetClassHint(DspPtr,xid,xclasshintptr) -> int               [procedure]
XSetClassHint(DspPtr,xid,xclasshintptr)                      [procedure]
XGetNormalHints(DspPtr,xid,xsizehintsptr) -> int             [procedure]
XSetNormalHints(DspPtr,xid,xsizehintsptr)                    [procedure]
XGetTransientForHint(DspPtr,xid,ulongptr2) -> int            [procedure]
XSetTransientForHint(DspPtr,xid1,xid2)                       [procedure]
XGetWMHints(DspPtr,xid) -> xwmhintsptr                       [procedure]
XSetWMHints(DspPtr,xid,xwmhintsptr)                          [procedure]
XGetZoomHints(DspPtr,xid,xsizehintsptr) -> int               [procedure]
XSetZoomHints(DspPtr,xid,xsizehintsptr)                      [procedure]
XGetIconName(DspPtr,xid,charptrptr) -> int                   [procedure]
XSetIconName(DspPtr,xid,string)                              [procedure]
XGetIconSizes(DspPtr,xid,xiconsizeptrptr,intvec) -> int      [procedure]
XSetIconSizes(DspPtr,xid,xiconsizeptr,int)                   [procedure]
XSetCommand(DspPtr,xid,charptrptr,int)                       [procedure]
        These procedures implement the equivalent C functions.




--- C.x/x/pop/ref/XWindowManager
--- Copyright University of Sussex 1991. All rights reserved.
