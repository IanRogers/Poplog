HELP VED_ATTACH                                    Aaron Sloman Feb 2001

LIB ved_attach

Revised 11 Feb 2003
    To allow multiple files to be attached


Use of these facilities requires

    uses vedmail
    (E.g. in your $poplib/vedinit.p file)



The command:

    ENTER attach <filename>

    Reads into the current Ved file a message template including an
    attachment containing a mime-encoded version of the file specified.

    Then all you have to do is edit To: and Subject: lines (and edit or
    delete Cc: and Bcc: lines) add your comments in the message field,
    then send the whole file using
        ENTER sendmr

    ENTER attach <filename>  <filename> ....
    This will attach several files. Warning: the names of the files are
    truncated to be just the file names without path information. So if
    two files in different directories have different names either
    rename them before attaching or edit the names inserted by
    ved_attach before sending.

(Please note the warning about old and new versions of LIB ved_send,
below, if you are not using this at Birmingham).


         CONTENTS - (Use <ENTER> g to access required sections)

 -- Overview
 -- Multiple attachments
 -- Sending the message
 -- -- Old and new versions of ved_send/ved_sendmr
 -- -- Leave no blank lines in the header
 -- An example
 -- REQUIREMENTS
 -- Fetching the new ved_send
 -- Decoding attachments
 -- Changing the program

-- Overview -----------------------------------------------------------

ENTER attach <filename>

This command reads in a mime-encoded version of the file, and prepares
lines to go into message header and attachment header to allow
the attachment to be sent and decoded at the other end.

It also prints instructions. The first time it is used in any Ved
session it prints lengthy instructions into the file (as shown in the
example below).

Thereafter it prints only a short reminder. To get the lengthy
instructions again either do

    ENTER lib ved_attach

or leave and restart Ved.

For those unaccustomed to Ved: the Ved command above

    ENTER attach <filename>

Is given as follows:
    Press ENTER key (or CTRL-g)
    Type the command line as shown: attach...
        including the name of the file to be attached
    Press RETURN key (not ENTER).

It will prepare a mail message for you, with the range marked, and
portions for you to edit, before sending, as explained below.

-- Multiple attachments -----------------------------------------------

It also handles multiple attachments. So you no longer have to send each
attachment in a separate message.

(For recipients it is sometimes more convenient to put multiple files in
a gzipped tar file or zip file and send as one attachment.)

-- Sending the message ------------------------------------------------

Having edited the To:, Subject: and other lines in the message
header you can also edit an introductory text field which the
ENTER attach command will set up (example below).

Then make sure everying is marked (See TEACH mark, HELP mark), and post
the marked range using

    ENTER sendmr

-- -- Old and new versions of ved_send/ved_sendmr

If you use the new version of lib ved_send from Birmingham (see below)
it will send the full header as marked in the file.

However, if you use the default older lib ved_send/ved_sendmr supplied
with poplog it will not necessarily work properly. That version pipes
email through mail or Mail. It will send the message, but not as a
mime-compliant message, and the recipient may or may not be able to use
the file.

(Later the poplog system will be re-packaged with the new version as the
default.)

The new send/sendmr command allows address lists on the To: line
and Cc: and Bcc: lines to overflow, so that you can continue with extra
address lines, provided that they are indented by four spaces or a tab.

The old version packaged with Poplog does not support this.

For the new version all addresses must be separated by commas, not just
spaces, as it understands address formats like this, which can include
spaces:
    Mrs Freddie Bloggs <f.blogs@psych.greatuniv.edu>,
    "Mr Joe Bloggs" <fred.blogs@phil.greatuniv.edu>

It is simplest to put one such address on each line, indented by a tab.
Commas will automatically be inserted at the end of each address line if
needed.

-- -- Leave no blank lines in the header

Do NOT allow any blank lines to occur before the end of the header.
So if you don't want a Cc: list or a Bcc: list delete those lines
completely, don't just leave them blank.

-- An example ---------------------------------------------------------

Example: The command
    ENTER attach ved_attach

Was used to produce a mime-encoded attachment from an early version of
this file before the attachment was inserted. (It will also work with
non-text files, e.g. tar.gz files, doc files, binaries, etc.)

The result is the text between the two rows of "=" signs.

=======================================================================

EDIT THE MARKED RANGE, THEN ENSURE IT IS STILL ALL MARKED AND SEND WITH
         ENTER sendmr
NOTES:
   The To: and Cc:/Bcc: lines can overflow.
       Overflow address lines must start with at least four spaces or a tab.
   NB: Use comma to separate addresses.
   NB: Leave a space after each colon.
            Delete unwanted lines in the header: do NOT leave them blank.
   See HELP ved_attach, TEACH email, HELP ved_getmail, HELP send

To:
Subject:
Cc:
Bcc: <addresses for "blind copies">
MIME-Version: 1.0
Content-Type: multipart/mixed; boundary="BARRIER-INSERTED-BY-ved_attach===64x5986"

This is a multi-part message in MIME format,
with an attachment below.

--BARRIER-INSERTED-BY-ved_attach===64x5986
Content-Type: text/plain; charset=us-ascii; format="flowed"

INSERT YOUR PLAIN TEXT MESSAGE HERE



Content below inserted by ved_attach

--BARRIER-INSERTED-BY-ved_attach===64x5986
Content-Type: text/plain name="ved_attach"
Content-Disposition: attachment; filename="ved_attach"
Content-Transfer-Encoding: BASE64

SEVMUCBWRURfQVRUQUNIICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQWFy
b24gU2xvbWFuIEZlYiAyMDAxCgpMSUIgdmVkX2F0dGFjaAoKVGhlIGNvbW1hbmQ6CgogICAg
RU5URVIgYXR0YWNoIDxmaWxlbmFtZT4KCiAgICBSZWFkcyBpbnRvIHRoZSBjdXJyZW50IFZl
ZCBmaWxlIGEgbWVzc2FnZSB0ZW1wbGF0ZSBpbmNsdWRpbmcgYW4KICAgIGF0dGFjaG1lbnQg
Y29udGFpbmluZyBhIG1pbWUtZW5jb2RlZCB2ZXJzaW9uIG9mIHRoZSBmaWxlIHNwZWNpZmll
ZC4KCiAgICBUaGVuIGFsbCB5b3UgaGF2ZSB0byBkbyBpcyBlZGl0IFRvOiBhbmQgU3ViamVj
dDogbGluZXMgKGFuZCBlZGl0IG9yCiAgICBkZWxldGUgQ2M6IGFuZCBCY2M6IGxpbmVzKSBh
ZGQgeW91ciBjb21tZW50cyBpbiB0aGUgbWVzc2FnZSBmaWVsZCwKICAgIHRoZW4gc2VuZCB0
aGUgd2hvbGUgZmlsZSB1c2luZwogICAgICAgIEVOVEVSIHNlbmRtcgoKKHN1YmplY3QgdG8g
dGhlIHdhcm5pbmcgYWJvdXQgb2xkIGFuZCBuZXcgdmVyc2lvbnMgb2YgTElCIHZlZF9zZW5k
LApiZWxvdywgaWYgeW91IGFyZSBub3QgdXNpbmcgdGhpcyBhdCBCaXJtaW5naGFtKS4KCgog
ICAgICAgICBDT05URU5UUyAtIChVc2UgPEVOVEVSPiBnIHRvIGFjY2VzcyByZXF1aXJlZCBz
ZWN0aW9ucykKCiAtLSBPdmVydmlldwogLS0gTXVsdGlwbGUgYXR0YWNobWVudHMKIC0tIFNl
bmRpbmcgdGhlIG1lc3NhZ2UKIC0tIC0tIE9sZCBhbmQgbmV3IHZlcnNpb25zIG9mIHZlZF9z
ZW5kL3ZlZF9zZW5kbXIKIC0tIC0tIExlYXZlIG5vIGJsYW5rIGxpbmVzIGluIHRoZSBoZWFk
ZXIKIC0tIEFuIGV4YW1wbGUKIC0tIFJFUVVJUkVNRU5UUwogLS0gRmV0Y2hpbmcgdGhlIG5l
dyB2ZWRfc2VuZAogLS0gRGVjb2RpbmcgYXR0YWNobWVudHMKIC0tIENoYW5naW5nIHRoZSBw
cm9ncmFtCgotLSBPdmVydmlldyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQoKRU5URVIgYXR0YWNoIDxmaWxlbmFtZT4KClRo
aXMgY29tbWFuZCByZWFkcyBpbiBhIG1pbWUtZW5jb2RlZCB2ZXJzaW9uIG9mIHRoZSBmaWxl
LCBhbmQgcHJlcGFyZXMKbGluZXMgdG8gZ28gaW50byBtZXNzYWdlIGhlYWRlciBhbmQgYXR0
YWNobWVudCBoZWFkZXIgdG8gYWxsb3cKdGhlIGF0dGFjaG1lbnQgdG8gYmUgc2VudCBhbmQg
ZGVjb2RlZCBhdCB0aGUgb3RoZXIgZW5kLgoKSXQgYWxzbyBwcmludHMgaW5zdHJ1Y3Rpb25z
LiBUaGUgZmlyc3QgdGltZSBpdCBpcyB1c2VkIGluIGFueSBWZWQKc2Vzc2lvbiBpdCBwcmlu
dHMgbGVuZ3RoeSBpbnN0cnVjdGlvbnMgaW50byB0aGUgZmlsZSAoYXMgc2hvd24gaW4gdGhl
CmV4YW1wbGUgYmVsb3cpLgoKVGhlcmVhZnRlciBpdCBwcmludHMgb25seSBhIHNob3J0IHJl
bWluZGVyLiBUbyBnZXQgdGhlIGxlbmd0aHkKaW5zdHJ1Y3Rpb25zIGFnYWluIGVpdGhlciBk
bwoKICAgIEVOVEVSIGxpYiB2ZWRfYXR0YWNoCgpvciBsZWF2ZSBhbmQgcmVzdGFydCBWZWQu
CgpGb3IgdGhvc2UgdW5hY2N1c3RvbWVkIHRvIFZlZDogdGhlIFZlZCBjb21tYW5kIGFib3Zl
CgogICAgRU5URVIgYXR0YWNoIDxmaWxlbmFtZT4KCklzIGdpdmVuIGFzIGZvbGxvd3M6CiAg
ICBQcmVzcyBFTlRFUiBrZXkgKG9yIENUUkwtZykKICAgIFR5cGUgdGhlIGNvbW1hbmQgbGlu
ZSBhcyBzaG93bjogYXR0YWNoLi4uCiAgICAgICAgaW5jbHVkaW5nIHRoZSBuYW1lIG9mIHRo
ZSBmaWxlIHRvIGJlIGF0dGFjaGVkCiAgICBQcmVzcyBSRVRVUk4ga2V5IChub3QgRU5URVIp
LgoKSXQgd2lsbCBwcmVwYXJlIGEgbWFpbCBtZXNzYWdlIGZvciB5b3UsIHdpdGggdGhlIHJh
bmdlIG1hcmtlZCwgYW5kCnBvcnRpb25zIGZvciB5b3UgdG8gZWRpdCwgYmVmb3JlIHNlbmRp
bmcsIGFzIGV4cGxhaW5lZCBiZWxvdy4KCi0tIE11bHRpcGxlIGF0dGFjaG1lbnRzIC0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCgpBdCBwcmVzZW50
IGl0IGRvZXNuJ3QgaGFuZGxlIG11bHRpcGxlIGF0dGFjaG1lbnRzLCB0aG91Z2ggaXQgbWF5
IGJlCmV4dGVuZGVkIHRvIGRvIHRoYXQgbGF0ZXIuIFNvIHlvdSBoYXZlIHRvIHNlbmQgZWFj
aCBhdHRhY2htZW50CmluIGEgc2VwYXJhdGUgbWVzc2FnZS4KCihGb3IgcmVjaXBpZW50cyBp
dCBpcyBvZnRlbiBtb3N0IGNvbnZlbmllbnQgdG8gcHV0IG11bHRpcGxlIGZpbGVzIGluIGEK
Z3ppcHBlZCB0YXIgZmlsZSBvciB6aXAgZmlsZSBhbmQgc2VuZCBhcyBvbmUgYXR0YWNobWVu
dC4pCgotLSBTZW5kaW5nIHRoZSBtZXNzYWdlIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLQoKSGF2aW5nIGVkaXRlZCB0aGUgVG86LCBTdWJqZWN0
OiBhbmQgb3RoZXIgbGluZXMgaW4gdGhlIG1lc3NhZ2UKaGVhZGVyIHlvdSBjYW4gYWxzbyBl
ZGl0IGFuIGludHJvZHVjdG9yeSB0ZXh0IGZpZWxkIHdoaWNoIHRoZQpFTlRFUiBhdHRhY2gg
Y29tbWFuZCB3aWxsIHNldCB1cCAoZXhhbXBsZSBiZWxvdykuCgpUaGVuIG1ha2Ugc3VyZSBl
dmVyeWluZyBpcyBtYXJrZWQgKFNlZSBURUFDSCBtYXJrLCBIRUxQIG1hcmspLCBhbmQgcG9z
dAp0aGUgbWFya2VkIHJhbmdlIHVzaW5nCgogICAgRU5URVIgc2VuZG1yCgotLSAtLSBPbGQg
YW5kIG5ldyB2ZXJzaW9ucyBvZiB2ZWRfc2VuZC92ZWRfc2VuZG1yCgpJZiB5b3UgdXNlIHRo
ZSBuZXcgdmVyc2lvbiBvZiBsaWIgdmVkX3NlbmQgZnJvbSBCaXJtaW5naGFtIChzZWUgYmVs
b3cpCml0IHdpbGwgc2VuZCB0aGUgZnVsbCBoZWFkZXIgYXMgbWFya2VkIGluIHRoZSBmaWxl
LgoKSG93ZXZlciwgaWYgeW91IHVzZSB0aGUgZGVmYXVsdCBvbGRlciBsaWIgdmVkX3NlbmQv
dmVkX3NlbmRtciBzdXBwbGllZAp3aXRoIHBvcGxvZyBpdCB3aWxsIG5vdCBuZWNlc3Nhcmls
eSB3b3JrIHByb3Blcmx5LiBUaGF0IHZlcnNpb24gcGlwZXMKZW1haWwgdGhyb3VnaCBtYWls
IG9yIE1haWwuIEl0IHdpbGwgc2VuZCB0aGUgbWVzc2FnZSwgYnV0IG5vdCBhcyBhCm1pbWUt
Y29tcGxpYW50IG1lc3NhZ2UsIGFuZCB0aGUgcmVjaXBpZW50IG1heSBvciBtYXkgbm90IGJl
IGFibGUgdG8gdXNlCnRoZSBmaWxlLgoKKExhdGVyIHRoZSBwb3Bsb2cgc3lzdGVtIHdpbGwg
YmUgcmUtcGFja2FnZWQgd2l0aCB0aGUgbmV3IHZlcnNpb24gYXMgdGhlCmRlZmF1bHQuKQoK
VGhlIG5ldyBzZW5kL3NlbmRtciBjb21tYW5kIGFsbG93cyBhZGRyZXNzIGxpc3RzIG9uIHRo
ZSBUbzogbGluZQphbmQgQ2M6IGFuZCBCY2M6IGxpbmVzIHRvIG92ZXJmbG93LCBzbyB0aGF0
IHlvdSBjYW4gY29udGludWUgd2l0aCBleHRyYQphZGRyZXNzIGxpbmVzLCBwcm92aWRlZCB0
aGF0IHRoZXkgYXJlIGluZGVudGVkIGJ5IGZvdXIgc3BhY2VzIG9yIGEgdGFiLgoKVGhlIG9s
ZCB2ZXJzaW9uIHBhY2thZ2VkIHdpdGggUG9wbG9nIGRvZXMgbm90IHN1cHBvcnQgdGhpcy4K
CkZvciB0aGUgbmV3IHZlcnNpb24gYWxsIGFkZHJlc3NlcyBtdXN0IGJlIHNlcGFyYXRlZCBi
eSBjb21tYXMsIG5vdCBqdXN0CnNwYWNlcywgYXMgaXQgdW5kZXJzdGFuZHMgYWRkcmVzcyBm
b3JtYXRzIGxpa2UgdGhpcywgd2hpY2ggY2FuIGluY2x1ZGUKc3BhY2VzOgogICAgTXJzIEZy
ZWRkaWUgQmxvZ2dzIDxmLmJsb2dzQHBzeWNoLmdyZWF0dW5pdi5lZHU+CiAgICAiTXIgSm9l
IEJsb2dncyIgPGZyZWQuYmxvZ3NAcGhpbC5ncmVhdHVuaXYuZWR1PgoKSXQgaXMgc2ltcGxl
c3QgdG8gcHV0IG9uZSBzdWNoIGFkZHJlc3Mgb24gZWFjaCBsaW5lLCBpbmRlbnRlZCBieSBh
IHRhYi4KQ29tbWFzIHdpbGwgYXV0b21hdGljYWxseSBiZSBpbnNlcnRlZCBhdCB0aGUgZW5k
IG9mIGVhY2ggYWRkcmVzcyBsaW5lIGlmCm5lZWRlZC4KCi0tIC0tIExlYXZlIG5vIGJsYW5r
IGxpbmVzIGluIHRoZSBoZWFkZXIKCkRvIE5PVCBhbGxvdyBhbnkgYmxhbmsgbGluZXMgdG8g
b2NjdXIgYmVmb3JlIHRoZSBlbmQgb2YgdGhlIGhlYWRlci4KU28gaWYgeW91IGRvbid0IHdh
bnQgYSBDYzogbGlzdCBvciBhIEJjYzogbGlzdCBkZWxldGUgdGhvc2UgbGluZXMKY29tcGxl
dGVseSwgZG9uJ3QganVzdCBsZWF2ZSB0aGVtIGJsYW5rLgoKLS0gQW4gZXhhbXBsZSAtLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0K
CkV4YW1wbGU6IFRoZSBjb21tYW5kCiAgICBFTlRFUiBhdHRhY2ggdmVkX2F0dGFjaAoKV2Fz
IHVzZWQgdG8gcHJvZHVjZSBhIG1pbWUtZW5jb2RlZCBhdHRhY2htZW50IGZyb20gdGhpcyBm
aWxlCmJlZm9yZSB0aGUgYXR0YWNobWVudCB3YXMgaW5zZXJ0ZWQuIChJdCB3aWxsIGFsc28g
d29yayB3aXRoIG5vbi10ZXh0CmZpbGVzLCBlLmcuIHRhci5neiBmaWxlcywgZG9jIGZpbGVz
LCBiaW5hcmllcywgZXRjLikKClRoZSByZXN1bHQgaXMgdGhlIHRleHQgYmV0d2VlbiB0aGUg
dHdvIHJvd3Mgb2YgIj0iIHNpZ25zLgoKPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KCkVESVQgVEhFIE1B
UktFRCBSQU5HRSwgVEhFTiBFTlNVUkUgSVQgSVMgU1RJTEwgQUxMIE1BUktFRCBBTkQgU0VO
RCBXSVRICiAgICAgICAgIEVOVEVSIHNlbmRtcgpOT1RFUzoKICAgVGhlIFRvOiBhbmQgQ2M6
L0JjYzogbGluZXMgY2FuIG92ZXJmbG93LgogICAgICAgT3ZlcmZsb3cgYWRkcmVzcyBsaW5l
cyBtdXN0IHN0YXJ0IHdpdGggYXQgbGVhc3QgZm91ciBzcGFjZXMgb3IgYSB0YWIuCiAgIE5C
OiBVc2UgY29tbWEgdG8gc2VwYXJhdGUgYWRkcmVzc2VzLgogICBOQjogTGVhdmUgYSBzcGFj
ZSBhZnRlciBlYWNoIGNvbG9uLgogICAgICAgICAgICBEZWxldGUgdW53YW50ZWQgbGluZXMg
aW4gdGhlIGhlYWRlcjogZG8gTk9UIGxlYXZlIHRoZW0gYmxhbmsuCiAgIFNlZSBIRUxQIHZl
ZF9hdHRhY2gsIFRFQUNIIGVtYWlsLCBIRUxQIHZlZF9nZXRtYWlsLCBIRUxQIHNlbmQKCgo9
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PQoKTm90ZSwgd2hlbiB0aGUgYWJvdmUgdGV4dCBpcyBpbnNlcnRl
ZCwgdGhlIHdob2xlIGluc2VydCBmcm9tIHRoZQpUbzogbGluZSBhdCB0aGUgc3RhcnQgdG8g
dGhlIGZpbmFsIGJhcnJpZXIgbGluZSBpcyBtYXJrZWQgYXV0b21hdGljYWxseS4KKFNlZSBI
RUxQIG1hcmspLgoKCi0tIFJFUVVJUkVNRU5UUyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCgpMSUIgdmVkX2F0dGFjaCBSRVFVSVJF
UwoKICAgIExJQiBtaW1lbmNvZGUKICAgICAgICBodHRwOi8vd3d3LmNzLmJoYW0uYWMudWsv
cmVzZWFyY2gvcG9wbG9nL2F1dG8vbWltZW5jb2RlLnAKCiAgICBMSUIgdmVkX3JlYWRtaW1l
CiAgICAgICAgaHR0cDovL3d3dy5jcy5iaGFtLmFjLnVrL3Jlc2VhcmNoL3BvcGxvZy9hdXRv
L3ZlZF9yZWFkbWltZS5wCgpUaGVzZSBhbmQgcmVsYXRlZCBmaWxlcyBjYW4gYmUgZmV0Y2hl
ZCBmcm9tCgogICAgaHR0cDovL3d3dy5jcy5iaGFtLmFjLnVrL3Jlc2VhcmNoL3BvcGxvZy9h
dHRhY2gKCkFsc28gcGFja2FnZWQgaW4KCiAgICBodHRwOi8vd3d3LmNzLmJoYW0uYWMudWsv
cmVzZWFyY2gvcG9wbG9nL2F0dGFjaC50YXIuZ3oKCi0tIEZldGNoaW5nIHRoZSBuZXcgdmVk
X3NlbmQgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCgpUaGUg
bmV3IExJQiB2ZWRfc2VuZCBhbmQgdGhlIHJlbGF0ZWQgTElCIHZlZF9nZXRtYWlsLCB2ZWRf
cmVwbHksCnZlZF9yZXNwb25kLCBldGMuIGNhbiBiZSBmZXRjaGVkIGluIHRoaXMgZmlsZQoK
ICAgIGh0dHA6Ly93d3cuY3MuYmhhbS5hYy51ay9yZXNlYXJjaC9wb3Bsb2cvdmVkbWFpbC50
YXIuZ3oKb3IKICAgIGZ0cDovL2Z0cC5jcy5iaGFtLmFjLnVrL3B1Yi9kaXN0L3BvcGxvZy92
ZWRtYWlsLnRhci5negoKKEFib3V0IDg2IEtieXRlcykuCgotLSBEZWNvZGluZyBhdHRhY2ht
ZW50cyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQoK
QSByZWxhdGVkIHBhY2thZ2UgKHN0aWxsIHVuZGVyIGRldmVsb3BtZW50KSBpcyB2ZWRfZGVj
b2RlLCB3aGljaAphbGxvd3MgbWltZSBhdHRhY2htZW50cyB0byBiZSBleHRyYWN0ZWQgYW5k
IGRlY29kZWQgZWFzaWx5IHdoaWxlIHlvdQphcmUgcmVhZGluZyBtYWlsIGluIFZlZC4KClNl
ZQoKICAgIEhFTFAgdmVkX2RlY29kZQogICAgICAgIGh0dHA6Ly93d3cuY3MuYmhhbS5hYy51
ay9yZXNlYXJjaC9wb3Bsb2cvaGVscC92ZWRfZGVjb2RlCgogICAgTElCIHZlZF9kZWNvZGUK
ICAgICAgICBodHRwOi8vd3d3LmNzLmJoYW0uYWMudWsvcmVzZWFyY2gvcG9wbG9nL2F1dG8v
dmVkX2RlY29kZS5wCgpMYXRlciB0aGF0IHdpbGwgYWxzbyBiZSBwYWNrYWdlZCB3aXRoCgot
LSBDaGFuZ2luZyB0aGUgcHJvZ3JhbSAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLQoKTGlrZSBzZXZlcmFsIHBhY2thZ2VzIGF0IHRoZSBGcmVlIFBv
cGxvZyBzaXRlCgogICAgaHR0cDovL3d3dy5jcy5iaGFtLmFjLnVrL3Jlc2VhcmNoL3BvcGxv
Zy9mcmVlcG9wbG9nLmh0bWwKCnRoaXMgbGlicmFyeSBpcyBzdGlsbCB1bmRlciBkZXZlbG9w
bWVudC4gQW55b25lIHVzaW5nIGl0IG1heSBlZGl0Cml0IHRvIHN1aXQgbG9jYWwgcmVxdWly
ZW1lbnRzLCBlLmcuIHJlbW92ZSB0aGUgYml0IG9mIHRoZQp2ZWRfYXR0YWNoIHRoYXQgcHJp
bnRzIG91dCBvdXQgdmVyYm9zZSBpbnN0cnVjdGlvbnMsIG9yIGNoYW5nZSB0aGVtCnRvIHN1
aXQgbG9jYWwgdXNlcnMuCgpQbGVhc2UgcG9zdCBjb21tZW50cyBhbmQgc3VnZ2VzdGlvbnMg
dG8gY29tcC5sYW5nLnBvcCwgb3IgdG8KCiAgICBBLlNsb21hbiBBVCBjcy5iaGFtLmFjLnVr
CgpVcGRhdGVkOiAxMSBGZWIgMjAwMQoKCi0tLSAkcG9wbG9jYWwvbG9jYWwvaGVscC92ZWRf
YXR0YWNoCi0tLSBDb3B5cmlnaHQgVW5pdmVyc2l0eSBvZiBCaXJtaW5naGFtIDIwMDEuIEFs
bCByaWdodHMgcmVzZXJ2ZWQuIC0tLS0tLQo=
--BARRIER-INSERTED-BY-ved_attach===64x5986--

=======================================================================

Note, when the above text is inserted, the whole insert from the
To: line at the start to the final barrier line is marked automatically.
(See HELP mark).


-- REQUIREMENTS -------------------------------------------------------

LIB ved_attach REQUIRES

    LIB mimencode
        http://www.cs.bham.ac.uk/research/poplog/auto/mimencode.p

    LIB ved_readmime
        http://www.cs.bham.ac.uk/research/poplog/auto/ved_readmime.p

These and related files can be fetched from

    http://www.cs.bham.ac.uk/research/poplog/attach

Also packaged in

    http://www.cs.bham.ac.uk/research/poplog/attach.tar.gz

-- Fetching the new ved_send ------------------------------------------

The new LIB ved_send and the related LIB ved_getmail, ved_reply,
ved_respond, etc. can be fetched in this file

    http://www.cs.bham.ac.uk/research/poplog/vedmail.tar.gz
or
    ftp://ftp.cs.bham.ac.uk/pub/dist/poplog/vedmail.tar.gz

(About 86 Kbytes).

-- Decoding attachments -----------------------------------------------

A related package (still under development) is ved_decode, which
allows mime attachments to be extracted and decoded easily while you
are reading mail in Ved.

See

    HELP ved_decode
        http://www.cs.bham.ac.uk/research/poplog/help/ved_decode

    LIB ved_decode
        http://www.cs.bham.ac.uk/research/poplog/auto/ved_decode.p

Later that will also be packaged with

-- Changing the program -----------------------------------------------

Like several packages at the Free Poplog site

    http://www.cs.bham.ac.uk/research/poplog/freepoplog.html

this library is still under development. Anyone using it may edit
it to suit local requirements, e.g. remove the bit of the
ved_attach that prints out out verbose instructions, or change them
to suit local users.

Please post comments and suggestions to comp.lang.pop, or to

    A.Sloman AT cs.bham.ac.uk


--- $poplocal/local/help/ved_attach
--- Copyright University of Birmingham 2005. All rights reserved. ------
