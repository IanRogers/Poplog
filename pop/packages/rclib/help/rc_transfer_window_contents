HELP RC_TRANSFER_WINDOW_CONTENTS                      A.Sloman June 1997

rc_transfer_window_contents(win_obj1, win_obj2);
rc_transfer_window_contents(win_obj1, win_obj2, true);

    Transfer the pictures in the first window to the second,
    and draw them. Scales will be automatically accommodated

    If the optional "true" argument is provided, then copy the picture
    objects when transferring.

    Don't erase them from the first window, in either case.

Example

uses rclib
uses rc_window_object
uses rc_point

;;; start a new window
vars win1 = rc_new_window_object( 600, 20, 400, 350, true, 'win1');

;;; Make it mouse sensitive
rc_mousepic(win1);

;;; make three mouse sensitive points
vars
    p1 = rc_new_live_point(20, 0, 6, 'a'),
    p2 = rc_new_live_point(0, 20, 7, 'b'),
    p3 = rc_new_live_point(0, -25, 15, 'c'),
;

;;; Move them around, but not too far apart
p1, p2, p3 =>

;;; create a new window with y scale reversed, and
;;; x and y scale sizes changed.

vars win2 =
    rc_new_window_object(false, 400, 400, 350, {200 175 3 3}, 'win2');

;;; transfer the contents, copying the points
rc_transfer_window_contents(win1, win2, true);

;;; The points in each window can be moved independently

;;; Now make another window, with slightly reduced scale
vars win3 =
    rc_new_window_object(20, 20, 400, 350, {200 175 2 2}, 'win3');

;;; transfer the contents, without copying the points
rc_transfer_window_contents(win2, win3);

;;; Now if points are moved in win3, they become hard to find in
;;; win2

rc_kill_window_object( win1);
rc_kill_window_object( win2);
rc_kill_window_object( win3);


--- $poplocal/local/rclib/help/rc_transfer_window_contents
--- Copyright University of Birmingham 1997. All rights reserved. ------
