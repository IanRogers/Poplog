http://www.cs.bham.ac.uk/research/poplog/com/startup/bham+nondefault+tcsh
$local/com/startup/bham+nondefault+tcsh
Aaron Sloman
http://www.cs.bham.ac.uk/~axs/
30 Oct 2003

RUNNING POPLOG

POPLOG WITH BHAM EXTENSIONS IN A USER-SPECIFIED LOCATION,
FOR TCSH and CSH USERS

If you have installed poplog with Birmingham extensions, then how you
run it will depend on whether it is in /usr/local/poplog or somewhere
else.

If you have used the default installation script

namely
    INSTALL_EVERYTHING_WITH_MOTIF
or
    INSTALL_EVERYTHING_WITHOUT_MOTIF

with the optional argument specifying an installation directory, then
you should find in the same directory as this file, in the location
where you untarred the poplog distribution two files that were created
during the distribution:

    poplog.sh
    poplog

The first is for users of bash or ksh, the second for users of tcsh or
csh

If Poplog is not in /usr/local/poplog, but in some other directory,
which we can here refer to as

    ROOTDIR

Then you should copy those files into the directory:

    ROOTDIR/local/setup/bin/poplog

    cp poplog poplog.sh  ROOTDIR/local/setup/bin/poplog

If the installation script successfully installed a symbolic link from

    /usr/local/bin/poplog

to
    ROOTDIR/local/setup/bin/poplog

Then, you should be able to run poplog commands by prefixing them with
'poplog'.

E.g.

    rehash

    poplog pop11

        Will start up pop11

    poplog xved myfile.p

        Will start up XVed (the multi-window version of the poplog
        editor Ved) and will read your file called myfile.p, if it
        exists, or will start a new file with that name.

NOTE: before doing this for the first time in an xterm window after you
have installed poplog, if your shell is tcsh or csh you will have to
type

    rehash

That 'rehash' command is not necessary if your shell is bash, or if you
have logged out and logged in after installing poplog.

However, if you wish to be able to run pop11, ved, xved, etc. without
having to type 'poplog' before each command, you can do this, which does
not require a link in /usr/local/bin/

    Give this 'source' command to set the environment variables

        source ROOTDIR/local/setup/bin/poplog

(with the path name replacing 'ROOTDIR').

    That will print out something like

        Sussex Poplog Version <version number>

    and you will then be able to run pop11, xved, clisp, prolog, etc.
    without the poplog prefix until you exit from that shell.

    Every time you start a new xterm window or log out and log in you'll
    have to repeat the above 'dot' command.

    You can avoid the need to repeat it by putting this in your .login
    file:
        source ROOTDIR/local/setup/bin/poplog

    Then after logging in or starting a new xterm window running a login
    shell you will be able run pop11, Xved, clisp, prolog, etc.,
    directly. E.g. to start up xved on your pop11 file called myfile.p

        xved myfile.p


For more information see
    http://www.cs.bham.ac.uk/research/poplog/userguide.html

which should have been installed in poplog as

    $usepop/man/man1/userguide.html
