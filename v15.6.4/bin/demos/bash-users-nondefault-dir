$usepop/bin/demos/nondefault-dir-for-bash
Aaron Sloman
http://www.cs.bham.ac.uk/~axs/
18 Jan 2005

RUNNING POPLOG IN A USER-SPECIFIED LOCATION,
FOR BASH and KSH USERS

If you have installed poplog then how you run it will depend on whether
it is in /usr/local/poplog or somewhere else.

If you did not select the default location, but specified another
location when installing poplog, then you should find in the same
directory as this file, in the location where you untarred the poplog
distribution two files that were created during the distribution:

    poplog.sh
    poplog

The first is for users of bash or ksh, the second for users of tcsh or
csh

If Poplog is not in /usr/local/poplog, but in some other directory,
which we can here refer to as

    ROOTDIR

Then you should find startup files
    poplog
    poplog.sh

in the directory:

    ROOTDIR/current-poplog/bin/

If the installation script successfully installed a symbolic link from

    /usr/local/bin/poplog

to
    ROOTDIR/current-poplog/bin/poplog.sh

Then, you should be able to run poplog commands by prefixing them with
'poplog'.

E.g.

    poplog pop11

        Will start up pop11

    poplog xved myfile.p

        Will start up XVed (the multi-window version of the poplog
        editor Ved) and will read your file called myfile.p, if it
        exists, or will start a new file with that name.

However, if you wish to be able to run pop11, ved, xved, etc. without
having to type 'poplog' before each command, you can do this, which does
not require a link in /usr/local/bin/

    Give this 'dot' command to set the environment variables:

        . ROOTDIR/current-poplog/bin/poplog.sh

(with the path name replacing 'ROOTDIR').

    That will print out something like

        Sussex Poplog Version <version number>

    and you will then be able to run pop11, xved, clisp, prolog, etc.
    without the poplog prefix until you exit from that shell.

    Every time you start a new xterm window or log out and log in you'll
    have to repeat the above 'dot' command.

    You can avoid the need to repeat it by putting this in your .bashrc
    file (using the actual path name):

        . ROOTDIR/current-poplog/bin/poplog.sh

    Then after logging in or starting a new xterm window running a login
    shell you will be able run pop11, Xved, clisp, prolog, etc.,
    directly. E.g. to start up xved on your pop11 file called myfile.p

        xved myfile.p


For more information see
    http://www.cs.bham.ac.uk/research/poplog/userguide.html

which should have been installed in poplog as

    $usepop/man/man1/userguide.html
