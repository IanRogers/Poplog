REF XT_CONSTANTS                                 Adrian Howard, Jul 1991
                                        Updated:  Jason Handby, Aug 1991
                                        Revised: Adrian Howard, Jul 1993

       COPYRIGHT University of Sussex 1990. All Rights Reserved.

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<                             >>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<     X TOOLKIT CONSTANTS     >>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<                             >>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

Below are listed a series of  constants as supplied by the include  file
INCLUDE * XT_CONSTANTS. These  give the  values of  various integer  and
string constants used as arguments to some of the X Toolkit  Intrinsics.
This file should  be considered  read-only since many  of the  constants
used are compiled into the Poplog image.


         CONTENTS - (Use <ENTER> g to access required sections)

  1   The Use Of These Constants

  2   Integer Constants

  3   Intrinsic String Constants

  4   Miscellaneous



-----------------------------
1  The Use Of These Constants
-----------------------------

It is strongly  recommended that  programmers use  these macros,  rather
than the values themselves, to protect against any future changes in the
X Toolkit.




--------------------
2  Integer Constants
--------------------

XtGrabNone -> 0                                 [include constant macro]
XtGrabNonexclusive -> 1                         [include constant macro]
XtGrabExclusive -> 2                            [include constant macro]
        These are  the three  permissible values  for the  integer  type
        XtGrabKind as  used in  procedures like  XtPopup (documented  in
        REF * XT_POPUP).


XtInputNoneMask -> 0                            [include constant macro]
XtInputReadMask -> 1                            [include constant macro]
XtInputWriteMask -> 2                           [include constant macro]
XtInputExceptMask -> 4                          [include constant macro]
        Condition mask values for XtAppAddInput (see REF * XT_EVENT).


XrmoptionNoArg -> 0                             [include constant macro]
XrmoptionIsArg -> 1                             [include constant macro]
XrmoptionStickyArg -> 2                         [include constant macro]
XrmoptionSepArg -> 3                            [include constant macro]
XrmoptionResArg -> 4                            [include constant macro]
XrmoptionSkipArg -> 5                           [include constant macro]
XrmoptionSkipNArgs -> 6                         [include constant macro]
XrmoptionSkipLine -> 7                          [include constant macro]
        These  are   possible  values   for   the  C   enumerated   type
        XrmOptionKind (represented in Pop-11  as * XptEnum), as used  in
        * XptOptionDescList  structures  (see   REF * XPT_GENERALTYPES.)
        They are  used  to  specify where  the  value  represented  by a
        command line is stored.

            XrmoptionNoArg
                The value  is  specified  in the  * XptODRValue  of  the
                associated * XptOptionDescRec.

            XrmoptionIsArg
                The value is the command line option string itself.

            XrmoptionStickyArg
                The value is represented  by the characters  immediately
                following the option string.

            XrmoptionSepArg
                The value is represented by the next command line option
                string.

            XrmoptionResArg
                The next command line option string specifies a resource
                and value (eg, '*background: green'.)

            XrmoptionSkipArg
                Ignore this command line option, and the next one.

            XrmoptionSkipLine
                Ignore this options, and any further ones.

            XrmoptionSkipNArgs
                Ignore this option, and the  next N options, where N  is
                stored  in   the   * XptODRValue   of   the   associated
                * XptOptionDescRec. If N is zero only the current option
                will be slipped.


XtAddress -> 0                                  [include constant macro]
XtBaseOffset -> 1                               [include constant macro]
XtImmediate -> 2                                [include constant macro]
XtResourceString -> 3                           [include constant macro]
XtResourceQuark -> 4                            [include constant macro]
XtWidgetBaseOffset -> 5                         [include constant macro]
XtProcedureArg -> 6                             [include constant macro]
        These are  the seven  permissible values  for the  integer  type
        XtAddressMode as used  in ConvertArgList structures  (documented
        in REF * XT_CONVERTER).


XtIMXEvent -> 1                                 [include constant macro]
XtIMTimer -> 2                                  [include constant macro]
XtIMAlternateInput -> 4                         [include constant macro]
XtIMAll -> (XtIMXEvent || XtIMTimer || XtIMAlternateInput)    [constant]
        Various masks for different types of event (see REF * XT_EVENT).


XtListHead -> 0                                 [include constant macro]
XtListTail -> 1                                 [include constant macro]
        Insertion   positions   for   event   handler   functions   (see
        REF * XT_EVENT).


XtAllEvents -> int                              [include constant macro]
        An event mask used to indicate all events (see REF * XT_EVENT).


XtCacheNone -> 1                                [include constant macro]
XtCacheAll -> 2                                 [include constant macro]
XtCacheByDisplay -> 3                           [include constant macro]
XtCacheRefCount -> 256                          [include constant macro]
        Constants to  specify  which  cache type  to  use  for  resource
        converters. See REF * XT_CONVERTER.


XtCallbackNoList -> 0                           [include constant macro]
XtCallbackHasNone -> 1                          [include constant macro]
XtCallbackHasSome -> 2                          [include constant macro]
        Constants that are  returned by XtHasCallbacks  to indicate  the
        status of  a  callback  list.  See  REF * XT_CALLBACK  for  more
        details.




-----------------------------
3  Intrinsic String Constants
-----------------------------

XtVaNested -> 'XtVaNested'                      [include constant macro]
XtVaTypedArg -> 'XtVaTypedArg'                  [include constant macro]
        These fixed-address strings  are the values  of the two  special
        resource names  that can  be used  in variable  length  argument
        lists.  These  allow  coercion  on  certain  resources  and  the
        capability to have nested  lists of resource/value pairs.  These
        are currently not valid on VMS systems.

        For a detailed  explanation of  variable-length argument  lists,
        see REF * XPT_TYPES/VARARGS.




----------------
4  Miscellaneous
----------------

XT_CONSTANTS_LOADED -> true                     [include constant macro]
        Set if  INCLUDE * XT_CONSTANTS file  has  been  compiled.  The
        include file  will  ignore  attempts to  re-compile  while  this
        constant is defined.




--- C.x/x/pop/ref/xt_constants
--- Copyright University of Sussex 1990. All rights reserved.
